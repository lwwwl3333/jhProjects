<?php
/**
 * Created by PhpStorm.
 * User: whj
 * Date: 16/9/24
 * Time: 17:28
 */

//class Test2{
//    protected $name;
//    private $age;
//
//    public function __construct($name,$age)
//    {
//        $this->name=$name;
//        $this->age=$age;
//
//
//    }
//     /**
//     * @return mixed
//     */
//    public function getName()
//    {
//        return $this->name;
//    }
//    /**
//     * @param mixed $name
//     */
//    public function setName($name)
//    {
//        $this->name = $name;
//    }
//
//    /**
//     * @param mixed $age
//     */
//    public function setAge($age)
//    {
//        $this->age = $age;
//    }
//
//    /**
//     * @return mixed
//     */
//    public function getAge()
//    {
//        return $this->age;
//    }
//
//    public function a(){
//       return 111;
//    }
//}
//
////$t1=new test2('燕十八','西岭' );
////echo $t1->getName();
//
//class Test3 extends Test2{
//    public $name;
//    public $age;
//
//    public function __construct($name,$age)
//    {
//        $this->name=$name;
//        $this->age=$age;
//
//
//    }
//
//    public function a(){
//       return 222;
//    }
//}
//
//$t3=new Test3(123,456);
//var_dump( $t3->name);

//class biu{
//    static public function Dhd($a,$b){
//        return $a+$b;
//}
//}
//
//class biubiu extends biu{
//    static public function Dhd($a, $b)
//    {
//        return 1; // TODO: Change the autogenerated stub
//    }
//}

class Single{
    public $num;
    public static $ob=null;
    function __construct()
    {
         $this->num=mt_rand(1,99999);
    }
    static function single(){
        if(Single::$ob==null){
            Single::$ob=new Single();
        }
        return self::$ob;
    }

}

$single=new Single();
echo $single->num;


class Single2{
    public $num;
    public static $ob=null;
    public function __construct()
    {
        $this->num=mt_rand(1,99999);
    }
    public function single2(){
        if(self::$ob===null){
            self::$ob=new Single2();
        }
        return self::$ob;
    }
}

class Single3{
    public $num;
    public static $ob=null;
    public function __construct()
    {
        $this->num=mt_rand(1,99999);
    }
    public function single3(){
        if(self::$ob===null){
            self::$ob=new Single3();
        }
        return self::$ob;
    }

}

class Single4{
    private $num;
    public static $ob=null;
    function __construct()
    {
        $this->num=mt_rand(1,9999);
    }
    function single4(){
        if(self::ob===null){
            self::$ob=new Single4();
        }
        return self::$ob;
    }


}

class Magic{
    function __set($name, $value)
    {
        // TODO: Implement __set() method.
        echo $name .'=====' .$value;
    }
    function __get($name)
    {
        // TODO: Implement __get() method.
        echo $name;
    }
    function __unset($name)
    {
        // TODO: Implement __unset() method.
        echo $name;
    }
    function __isset($name)
    {
        // TODO: Implement __isset() method.
        echo $name;
    }
}
 $mg=new Magic();

//$mg->name='123';
//$mg->gender;
unset($mg->sex);
isset($mg->boss);

interface BB{
    public function bb();
}

class Bbb implements BB{
    public function bb()
    {
        echo '我送你离开,千里之外';
    }
}
abstract class BBBB{
    abstract function dapao();
}
class zz extends BBBB{
    function dapao()
    {
        // TODO: Implement dapao() method.
        echo '那薄如蝉翼的未来,经不起谁来猜';
    }
}
class Sls{
    const PI=3.14;
    public $fs=self::PI;
}

class Single5{
    public $num;
    public static $ob=null;
    public function __construct()
    {
        $this->num=mt_rand(1,99999);
    }
    public function obc(){
        if(self::$ob===null){
            self::$ob=new Single5();
        }
        return self::$ob;
    }
}
   echo  Single5::$ob;

class magic2{
    public $ss=11;
    public $ff;
    function __set($name, $value)
    {
        // TODO: Implement __set() method.
        return $name.'hhhhhhhhhhhhhhhh'.$value;
    }
    function __get($name)
    {
        // TODO: Implement __get() method.
        echo $name;
    }
    function __isset($name)
    {
        // TODO: Implement __isset() method.
        echo $name;
    }
    function __unset($name)
    {
        // TODO: Implement __unset() method.
        echo $name;
    }
}

$mg2=new magic2();
echo $mg2->ss;
echo $mg2->cc;

